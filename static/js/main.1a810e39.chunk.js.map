{"version":3,"sources":["components/app-header/index.tsx","components/app-header/app-header.tsx","components/footer/index.tsx","components/footer/footer.tsx","components/img-list-item/index.tsx","components/img-list-item/img-list-item.tsx","components/img-list/index.tsx","components/img-list/img-list.tsx","components/img-add-form/index.tsx","components/img-add-form/img-add-form.tsx","components/section-one/index.tsx","components/section-one/section-one.tsx","components/spinner/index.tsx","components/spinner/spinner.tsx","components/error/index.tsx","components/error/error.tsx","components/section-two/index.tsx","components/section-two/section-two.tsx","components/app/app.tsx","serviceWorker.ts","components/error-boundry/index.tsx","components/error-boundry/error-boundry.tsx","index.tsx"],"names":["AppHeader","state","showMenu","onShowMenu","setState","this","Menu","to","className","role","id","type","onClick","React","Component","Footer","href","ImgListItem","props","label","onDelete","src","alt","ImgList","post","elements","map","item","key","ImgAddForm","path","onValueChange","e","target","value","onSubmit","preventDefault","onAdd","placeholder","onChange","SectionOne","itemList","addItem","body","newItem","uniqueId","length","alert","deleteItem","index","findIndex","elem","before","slice","after","Math","random","toString","Spinner","Error","SectionTwo","url","data","loading","error","getRepo","fetch","then","res","json","console","log","errorInfo","element","el","name","html_url","created_at","updated_at","default_branch","App","exact","component","Boolean","window","location","hostname","match","ErrorBoundry","children","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a810e39.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\nimport './style.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\ninterface IPropState {\r\n  showMenu: boolean\r\n}\r\n\r\nexport default class AppHeader extends React.Component<any, IPropState> {\r\n\r\n  state: IPropState = {\r\n    showMenu: false\r\n  };\r\n\r\n  onShowMenu = (showMenu: any) => {\r\n    this.setState({showMenu: !showMenu})\r\n  };\r\n\r\n  render() {\r\n\r\n    const {showMenu} = this.state;\r\n\r\n    const Menu = (\r\n      <ul>\r\n        <li>\r\n          <Link to='/'>Раздел №1</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/two'>Раздел №2</Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n\r\n    return (\r\n      <header className=\"header black-bg\">\r\n        <a className=\"logo\"><b>Vito<span> Technology</span></b></a>\r\n        {showMenu ? showMenu : Menu}\r\n        <nav role=\"navigation\">\r\n          <div id=\"menuToggle\">\r\n            <input type=\"checkbox\" onClick={() => this.onShowMenu(showMenu)}/>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <ul>\r\n              {showMenu &&\r\n              <ul className=\"\">\r\n                <li>\r\n                  <Link to='/'>Раздел №1</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to='/two'>Раздел №2</Link>\r\n                </li>\r\n              </ul>\r\n              }\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import Footer from \"./footer\";\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport './footer.css'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className=\"site-footer\">\r\n        <div className=\"text-center\">\r\n          <p>\r\n            &copy; <strong>Алексей Зеленский </strong>\r\n          </p>\r\n          <div className=\"credits\">\r\n            Created with template by <a href=\"#\">Vito Technology</a>\r\n          </div>\r\n          <a href=\"\" className=\"go-top\">\r\n            <i className=\"fa fa-angle-up\"></i>\r\n          </a>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  )\r\n};\r\nexport default Footer;\r\n","import ImgListItem from \"./img-list-item\";\r\n\r\nexport default ImgListItem;\r\n","import React from \"react\";\r\n\r\nimport './style.css'\r\n\r\nexport default class ImgListItem extends React.Component<any> {\r\n  render() {\r\n\r\n    const {label, onDelete} = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h4 className=\"mb-3\">\r\n              <button type=\"button\" className=\"btn-trash btn-sm\" onClick={onDelete}>\r\n                <i className=\"fa fa-trash-o\"/>\r\n              </button>\r\n            </h4>\r\n            <img className=\"img-responsive\" src={label} alt=''/>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import ImgList from \"./img-list\";\r\n\r\nexport default ImgList;\r\n","import React from \"react\";\r\nimport ImgListItem from \"../img-list-item\";\r\n\r\nimport './style.css'\r\n\r\ninterface IPropState {\r\n  item: [];\r\n}\r\n\r\nexport default class ImgList extends React.Component<any, IPropState> {\r\n  render() {\r\n\r\n    const {post, onDelete} = this.props;\r\n    const elements = post.map((item: JSX.IntrinsicAttributes & JSX.IntrinsicClassAttributes<ImgListItem> & Readonly<any> & Readonly<{ children?: React.ReactNode; }>) => {\r\n      return (\r\n        <div className=\"col-lg-6\">\r\n          <li key={item.id}>\r\n          <ImgListItem\r\n            {...item}\r\n            onDelete={() => onDelete(item.id)}\r\n          />\r\n          </li>\r\n        </div>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {elements}\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import ImgAddForm from \"./img-add-form\";\r\n\r\nexport default ImgAddForm;\r\n","import React from \"react\";\r\n\r\nimport './style.css'\r\n\r\ninterface IPropState {\r\n  path: ''\r\n}\r\n\r\nexport default class ImgAddForm extends React.Component<any, IPropState> {\r\n\r\n  state: IPropState = {\r\n    path: ''\r\n  };\r\n\r\n  onValueChange = (e: { target: { value: any; }; }) => {\r\n    this.setState({\r\n      path: e.target.value\r\n    })\r\n  };\r\n\r\n  onSubmit = (e: { preventDefault: () => void; }) => {\r\n    e.preventDefault();\r\n    this.props.onAdd(this.state.path);\r\n    this.setState({\r\n      path: ''\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className=\"pull-right position\" onSubmit={this.onSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Введите url изображения\"\r\n            onChange={this.onValueChange}\r\n            value={this.state.path}\r\n            className=\"form-control search-btn \"/>\r\n          <button type=\"submit\" className='pull-right btn btn-theme02'>\r\n            Добавить\r\n          </button>\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import SectionOne from \"./section-one\";\r\n\r\nexport default SectionOne;\r\n","import React from \"react\";\r\nimport ImgList from \"../img-list\";\r\nimport ImgAddForm from \"../img-add-form\";\r\nimport './style.css'\r\n\r\n\r\ninterface IPropState {\r\n  itemList: [\r\n    { label: 'https://1920x1080hdwallpapers.com/image/201512/movies/3390/kylo-ren-blizzard-block-star-wars-episode-7.jpg', id: 1 }\r\n  ]\r\n}\r\n\r\nexport default class SectionOne extends React.Component<any, IPropState> {\r\n  state: IPropState = {\r\n    itemList: [\r\n      {\r\n        label: 'https://1920x1080hdwallpapers.com/image/201512/movies/3390/kylo-ren-blizzard-block-star-wars-episode-7.jpg',\r\n        id: 1\r\n      },\r\n    ]\r\n  };\r\n\r\n  addItem = (body: any) => {\r\n    const newItem = {\r\n      label: body,\r\n      id: this.uniqueId()\r\n    };\r\n    if (newItem.label.length === 0) {\r\n      return (\r\n        alert('Введите текст')\r\n      )\r\n    } else {\r\n      // @ts-ignore\r\n      this.setState(({itemList}) => {\r\n        const newArr = [...itemList, newItem];\r\n\r\n        return {\r\n          itemList: newArr\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  deleteItem = (id: number) => {\r\n    // @ts-ignore\r\n    this.setState(({itemList}) => {\r\n        const index = itemList.findIndex(elem =>\r\n          elem.id === id\r\n        );\r\n        const before = itemList.slice(0, index);\r\n        const after = itemList.slice(index + 1);\r\n\r\n        const newArr = [...before, ...after];\r\n\r\n        return {\r\n          itemList: newArr\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  uniqueId = () => {\r\n    return `f${(~~(Math.random() * 1e8)).toString(16)}`\r\n  };\r\n\r\n  render() {\r\n\r\n    const {itemList} = this.state;\r\n    return (\r\n      <div>\r\n          <ImgAddForm onAdd={this.addItem}/>\r\n            <div className=\"row\">\r\n              <ImgList\r\n                post={itemList}\r\n                onDelete={this.deleteItem}\r\n              />\r\n            </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n};\r\n\r\n","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () =>{\n    return(\n      <div className=\"lds-css ng-scope\">\n          <div className=\"lds-spinner\">\n              <div></div>\n              <div></div>\n              <div></div>\n          </div>\n      </div>\n    )\n};\n\nexport default Spinner;","import Error from './error';\n\nexport default Error;","import React from 'react';\n\nconst Error = () => {\n    return <div className=\"error\">Error</div>\n};\n\nexport default Error;\n","import SectionTwo from \"./section-two\";\r\n\r\nexport default SectionTwo;\r\n","import React from \"react\";\r\nimport './style.css'\r\nimport Spinner from \"../spinner\";\r\nimport Error from \"../error\";\r\n\r\n\r\ninterface IPropState {\r\n  url: '',\r\n  data: [],\r\n  loading: boolean,\r\n  error: boolean\r\n}\r\n\r\nexport default class SectionTwo extends React.Component<any, IPropState> {\r\n  state: IPropState = {\r\n    url: '',\r\n    data: [],\r\n    loading: false,\r\n    error: false\r\n  };\r\n\r\n  // componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<IPropState>, snapshot?: any): void {\r\n  //   if (this.state.url !== prevState.url) {\r\n  //     this.getRepo();\r\n  //   }\r\n  // }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n    this.setState({\r\n      error: true\r\n    })\r\n  }\r\n\r\n  getRepo = () => {\r\n    const url = 'https://api.github.com/users/';\r\n    fetch(`${url}${this.state.url}/repos`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState({\r\n          data: res,\r\n          loading: false\r\n        });\r\n        console.log(this.state.data)\r\n      })\r\n  };\r\n\r\n  onValueChange = (e: { target: { value: any; }; }) => {\r\n    this.setState({\r\n      url: e.target.value\r\n    })\r\n  };\r\n\r\n  onSubmit = (e: { preventDefault: () => void; }) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    this.getRepo();\r\n  };\r\n\r\n  render() {\r\n\r\n    const {loading, error} = this.state;\r\n\r\n    const element = (\r\n      <div>\r\n        {this.state.data.map((el) => {\r\n          const {name, html_url, id, created_at, updated_at, default_branch} = el;\r\n          return (\r\n            <div className=\"room-box\" key={id}>\r\n              <h5 className=\"text-primary\"><a href={html_url}>{name}</a></h5>\r\n              <p>Создан: {created_at}</p>\r\n              <p><span className=\"text-muted\">Обновлен :</span> {updated_at} | <span\r\n                className=\"text-muted\">Ветка :</span> {default_branch} </p>\r\n            </div>\r\n          )\r\n        })\r\n        }\r\n      </div>\r\n    );\r\n\r\n    if (loading) {\r\n      return <Spinner/>\r\n    }\r\n\r\n    if (error) {\r\n      return <Error/>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <section id=\"main-content\">\r\n          <section className=\"wrapper site-min-height\">\r\n            <div className=\"chat-room mt\">\r\n              <aside className=\"mid-side\">\r\n                <div className=\"chat-room-head\">\r\n                  <h3>GitHub API</h3>\r\n                </div>\r\n                <div className=\"room-desk\">\r\n                  <h4 className=\"pull-left\">\r\n                    <form className=\"pull-right position\" onSubmit={this.onSubmit}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Введите имя пользователя github\"\r\n                        onChange={this.onValueChange}\r\n                        value={this.state.url}\r\n                        className=\"form-control search-btn \"/>\r\n                      <button type=\"submit\" className='pull-right btn btn-theme02'>\r\n                        Добавить\r\n                      </button>\r\n                    </form>\r\n                  </h4>\r\n                  {element}\r\n                </div>\r\n              </aside>\r\n            </div>\r\n          </section>\r\n        </section>\r\n      </div>\r\n\r\n    )\r\n  }\r\n};\r\n\r\n","import React from 'react';\nimport AppHeader from \"../app-header\";\nimport Footer from \"../footer\";\nimport {Route,Switch} from \"react-router-dom\";\n\nimport './style.css'\nimport SectionOne from \"../section-one\";\nimport SectionTwo from \"../section-two\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <AppHeader/>\n      <div className=\"content\">\n        <div className=\"animated fadeIn\">\n      <Switch>\n        <Route path='/' exact component={SectionOne}/>\n        <Route path='/two' exact component={SectionTwo}/>\n      </Switch>\n        </div>\n      </div>\n      <Footer/>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport Error from '../error';\n\nexport default class ErrorBoundry extends Component {\n    state = {\n        error: false\n    };\n\n    componentDidCatch(error: any, errorInfo: any) {\n        this.setState({error: true})\n    }\n\n    render() {\n        if (this.state.error) {\n            return <Error/>\n        }\n        return this.props.children\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport ErrorBoundry from \"./components/error-boundry\";\n\nReactDOM.render(\n  <ErrorBoundry>\n    <Router>\n      <App/>\n    </Router>\n  </ErrorBoundry>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}